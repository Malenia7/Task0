/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DIALPAGEVIEWBASE_HPP
#define DIALPAGEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/dialpage_screen/DialPagePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/clock/AnalogClock.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/containers/Slider.hpp>

class DialPageViewBase : public touchgfx::View<DialPagePresenter>
{
public:
    DialPageViewBase();
    virtual ~DialPageViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage FrontDial;
    touchgfx::SwipeContainer DialSwipe;
    touchgfx::Container SwipeTool;
    touchgfx::ScalableImage BackTool;
    touchgfx::Button ButtonAlipay;
    touchgfx::Button ButtonStress;
    touchgfx::Button ButtonBreathe;
    touchgfx::Button ButtonCount;
    touchgfx::Container SwipeDigital;
    touchgfx::ScalableImage BackD;
    touchgfx::DigitalClock DigitalClock;
    touchgfx::TextAreaWithTwoWildcards TextDateD;
    touchgfx::TextAreaWithOneWildcard TextYearD;
    touchgfx::TextAreaWithOneWildcard TextWeekD;
    touchgfx::TextAreaWithOneWildcard TextTempD;
    touchgfx::TextAreaWithOneWildcard TextStepD;
    touchgfx::TextAreaWithOneWildcard TextPulseD;
    touchgfx::Container SwipeAnalog;
    touchgfx::AnalogClock AnalogClock;
    touchgfx::TextAreaWithOneWildcard TextDate;
    touchgfx::TextAreaWithOneWildcard TextTemp;
    touchgfx::TextAreaWithOneWildcard TextStep;
    touchgfx::TextAreaWithOneWildcard TextPulse;
    touchgfx::ModalWindow modalWindow1;
    touchgfx::Slider slider1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTDATEDBUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar TextDateDBuffer1[TEXTDATEDBUFFER1_SIZE];
    static const uint16_t TEXTDATEDBUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar TextDateDBuffer2[TEXTDATEDBUFFER2_SIZE];
    static const uint16_t TEXTYEARD_SIZE = 5;
    touchgfx::Unicode::UnicodeChar TextYearDBuffer[TEXTYEARD_SIZE];
    static const uint16_t TEXTWEEKD_SIZE = 2;
    touchgfx::Unicode::UnicodeChar TextWeekDBuffer[TEXTWEEKD_SIZE];
    static const uint16_t TEXTTEMPD_SIZE = 6;
    touchgfx::Unicode::UnicodeChar TextTempDBuffer[TEXTTEMPD_SIZE];
    static const uint16_t TEXTSTEPD_SIZE = 5;
    touchgfx::Unicode::UnicodeChar TextStepDBuffer[TEXTSTEPD_SIZE];
    static const uint16_t TEXTPULSED_SIZE = 4;
    touchgfx::Unicode::UnicodeChar TextPulseDBuffer[TEXTPULSED_SIZE];
    static const uint16_t TEXTDATE_SIZE = 3;
    touchgfx::Unicode::UnicodeChar TextDateBuffer[TEXTDATE_SIZE];
    static const uint16_t TEXTTEMP_SIZE = 6;
    touchgfx::Unicode::UnicodeChar TextTempBuffer[TEXTTEMP_SIZE];
    static const uint16_t TEXTSTEP_SIZE = 5;
    touchgfx::Unicode::UnicodeChar TextStepBuffer[TEXTSTEP_SIZE];
    static const uint16_t TEXTPULSE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar TextPulseBuffer[TEXTPULSE_SIZE];

private:

};

#endif // DIALPAGEVIEWBASE_HPP
