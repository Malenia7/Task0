/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/dialpage_screen/DialPageViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DialPageViewBase::DialPageViewBase()
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    FrontDial.setBitmap(touchgfx::Bitmap(BITMAP_OVERLAY_240X240_ID));
    FrontDial.setPosition(40, 0, 240, 240);
    FrontDial.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(FrontDial);

    DialSwipe.setXY(40, 0);
    DialSwipe.setSwipeCutoff(50);
    DialSwipe.setEndSwipeElasticWidth(50);

    SwipeTool.setWidth(240);
    SwipeTool.setHeight(240);
    BackTool.setBitmap(touchgfx::Bitmap(BITMAP_TOOL_ID));
    BackTool.setPosition(0, 0, 240, 240);
    BackTool.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    SwipeTool.add(BackTool);

    ButtonAlipay.setXY(130, 130);
    ButtonAlipay.setBitmaps(touchgfx::Bitmap(BITMAP_ALIPAY_60X60_ID), touchgfx::Bitmap(BITMAP_ALIPAY_PRESSED_60X60_ID));
    SwipeTool.add(ButtonAlipay);

    ButtonStress.setXY(40, 130);
    ButtonStress.setBitmaps(touchgfx::Bitmap(BITMAP_STRESS_60X60_ID), touchgfx::Bitmap(BITMAP_STRESS_PRESSED_60X60_ID));
    SwipeTool.add(ButtonStress);

    ButtonBreathe.setXY(130, 40);
    ButtonBreathe.setBitmaps(touchgfx::Bitmap(BITMAP_BREATHE_60X60_ID), touchgfx::Bitmap(BITMAP_BREATHE_PRESSED_60X60_ID));
    SwipeTool.add(ButtonBreathe);

    ButtonCount.setXY(40, 40);
    ButtonCount.setBitmaps(touchgfx::Bitmap(BITMAP_COUNT_60X60_ID), touchgfx::Bitmap(BITMAP_COUNT_PRESSED_60X60_ID));
    SwipeTool.add(ButtonCount);

    DialSwipe.add(SwipeTool);

    SwipeDigital.setWidth(240);
    SwipeDigital.setHeight(240);
    BackD.setBitmap(touchgfx::Bitmap(BITMAP_WATCHFACE_DIGITAL_CIRCLE_ID));
    BackD.setPosition(0, 0, 240, 240);
    BackD.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    SwipeDigital.add(BackD);

    DigitalClock.setPosition(33, 104, 180, 50);
    DigitalClock.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DigitalClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U1EG));
    DigitalClock.displayLeadingZeroForHourIndicator(true);
    DigitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    DigitalClock.setTime24Hour(10, 10, 0);
    SwipeDigital.add(DigitalClock);

    TextDateD.setXY(120, 160);
    TextDateD.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextDateD.setLinespacing(0);
    touchgfx::Unicode::snprintf(TextDateDBuffer1, TEXTDATEDBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_N0WG).getText());
    TextDateD.setWildcard1(TextDateDBuffer1);
    touchgfx::Unicode::snprintf(TextDateDBuffer2, TEXTDATEDBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M01F).getText());
    TextDateD.setWildcard2(TextDateDBuffer2);
    TextDateD.resizeToCurrentText();
    TextDateD.setTypedText(touchgfx::TypedText(T_SYSDATE));
    SwipeDigital.add(TextDateD);

    TextYearD.setXY(40, 160);
    TextYearD.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextYearD.setLinespacing(0);
    Unicode::snprintf(TextYearDBuffer, TEXTYEARD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RNBZ).getText());
    TextYearD.setWildcard(TextYearDBuffer);
    TextYearD.resizeToCurrentText();
    TextYearD.setTypedText(touchgfx::TypedText(T_SYSYEAR));
    SwipeDigital.add(TextYearD);

    TextWeekD.setXY(100, 190);
    TextWeekD.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextWeekD.setLinespacing(0);
    Unicode::snprintf(TextWeekDBuffer, TEXTWEEKD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_MFGQ).getText());
    TextWeekD.setWildcard(TextWeekDBuffer);
    TextWeekD.resizeToCurrentText();
    TextWeekD.setTypedText(touchgfx::TypedText(T_SYSWEEK));
    SwipeDigital.add(TextWeekD);

    TextTempD.setPosition(155, 75, 50, 24);
    TextTempD.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextTempD.setLinespacing(0);
    Unicode::snprintf(TextTempDBuffer, TEXTTEMPD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G42F).getText());
    TextTempD.setWildcard(TextTempDBuffer);
    TextTempD.setTypedText(touchgfx::TypedText(T_TEMP));
    SwipeDigital.add(TextTempD);

    TextStepD.setPosition(90, 75, 60, 24);
    TextStepD.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextStepD.setLinespacing(0);
    Unicode::snprintf(TextStepDBuffer, TEXTSTEPD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IMEI).getText());
    TextStepD.setWildcard(TextStepDBuffer);
    TextStepD.setTypedText(touchgfx::TypedText(T_STEP));
    SwipeDigital.add(TextStepD);

    TextPulseD.setPosition(40, 75, 40, 24);
    TextPulseD.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextPulseD.setLinespacing(0);
    Unicode::snprintf(TextPulseDBuffer, TEXTPULSED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CU2K).getText());
    TextPulseD.setWildcard(TextPulseDBuffer);
    TextPulseD.setTypedText(touchgfx::TypedText(T_PULSE));
    SwipeDigital.add(TextPulseD);

    DialSwipe.add(SwipeDigital);

    SwipeAnalog.setWidth(240);
    SwipeAnalog.setHeight(240);
    AnalogClock.setXY(0, 0);
    AnalogClock.setBackground(BITMAP_WATCHFACE_ANALOG_ID, 120, 120);
    AnalogClock.setupSecondHand(BITMAP_WATCHHAND_SECOND_ID, 0, 100);
    AnalogClock.setupHourHand(BITMAP_WATCHHAND_HOUR_ID, 0, 55);
    AnalogClock.setHourHandMinuteCorrection(false);
    AnalogClock.setupMinuteHand(BITMAP_WATCHHAND_MINUTE_ID, 5, 92);
    AnalogClock.setMinuteHandSecondCorrection(false);
    AnalogClock.initializeTime24Hour(10, 10, 0);
    SwipeAnalog.add(AnalogClock);

    TextDate.setPosition(170, 130, 30, 24);
    TextDate.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextDate.setLinespacing(0);
    Unicode::snprintf(TextDateBuffer, TEXTDATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TNR0).getText());
    TextDate.setWildcard(TextDateBuffer);
    TextDate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XYZP));
    SwipeAnalog.add(TextDate);

    TextTemp.setPosition(135, 50, 50, 24);
    TextTemp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextTemp.setLinespacing(0);
    Unicode::snprintf(TextTempBuffer, TEXTTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B6OG).getText());
    TextTemp.setWildcard(TextTempBuffer);
    TextTemp.setTypedText(touchgfx::TypedText(T_TEMP));
    SwipeAnalog.add(TextTemp);

    TextStep.setPosition(40, 130, 60, 24);
    TextStep.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextStep.setLinespacing(0);
    Unicode::snprintf(TextStepBuffer, TEXTSTEP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7G7G).getText());
    TextStep.setWildcard(TextStepBuffer);
    TextStep.setTypedText(touchgfx::TypedText(T_STEP));
    SwipeAnalog.add(TextStep);

    TextPulse.setPosition(120, 180, 40, 24);
    TextPulse.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextPulse.setLinespacing(0);
    Unicode::snprintf(TextPulseBuffer, TEXTPULSE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_62PE).getText());
    TextPulse.setWildcard(TextPulseBuffer);
    TextPulse.setTypedText(touchgfx::TypedText(T_PULSE));
    SwipeAnalog.add(TextPulse);

    DialSwipe.add(SwipeAnalog);

    DialSwipe.setSelectedPage(1);
    add(DialSwipe);

    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_TOOL_ID), 40, 0);
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    modalWindow1.setShadeAlpha(150);
    slider1.setXY(145, 20);
    slider1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_FILLER_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_FILLER_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_ROUNDED_DARK_ID));
    slider1.setupVerticalSlider(12, 0, 4, 0, 180);
    slider1.setValueRange(0, 100);
    slider1.setValue(5);
    modalWindow1.add(slider1);

    add(modalWindow1);
}

DialPageViewBase::~DialPageViewBase()
{

}

void DialPageViewBase::setupScreen()
{

}
